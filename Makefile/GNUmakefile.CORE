###################################################

# default target list
SHLIB=libLArCV${PACKAGE_NAME}.so

PACKAGE_BUILDDIR = $(LARCV_BUILDDIR)/$(PACKAGE_NAME)
PACKAGE_INCDIR   = $(LARCV_INCDIR)/$(HEADERS_DEST)



ifdef HEADERS_DEST
$(shell mkdir -p $(PACKAGE_INCDIR))
endif

OBJECTS = $(addprefix $(PACKAGE_BUILDDIR)/, $(SOURCES:.cxx=.o))
WRAP    = $(PACKAGE_BUILDDIR)/$(PACKAGE_NAME)_wrap
PYLIB   = _$(PACKAGE_NAME).so

all: pre_build main_build pkg_build 

pre_build: 
	$(shell mkdir -p $(PACKAGE_BUILDDIR))
	
main_build: pre_build $(OBJECTS) $(WRAP).o install_header

pkg_build: $(PYLIB)

# default rule for making .o files from .cxx files
$(PACKAGE_BUILDDIR)/%.o: %.cxx %.h
	@echo '<< compiling' $< '>>'
	@$(CXX) $(CXXFLAGS) $(INCFLAGS) -DLARCV_NUMPY=$(LARCV_NUMPY) -c $< -o $@

$(PYLIB): $(WRAP).o $(OBJECTS)
	# @echo $(PYLIB)
	@$(SOMAKER) $(SOFLAGS) $(OBJECTS) $(WRAP).o -o $(LARCV_LIBDIR)/$@  $(LDFLAGS) -lstdc++ $(PYTHONLIB)



$(WRAP).o: $(WRAP).cxx
	@echo "Compile python bindings"
	@$(CXX) $(CXXFLAGS) $(INCFLAGS) $(PYTHONINC) -c $< -o $@

$(WRAP).cxx: $(PACKAGE_NAME).i
	@echo "Generate python bindings"
	@swig -c++ -python -o $@ $<
	@mv $(PACKAGE_BUILDDIR)/$(PACKAGE_NAME).py $(LARCV_LIBDIR)/larcv/

# install headers
install_header: $(OBJECTS)
ifdef HEADERS_DEST
	@echo '<< installing headers >>'
	@$(foreach f, $(HEADERS),$(shell cp $(f) $(PACKAGE_INCDIR)/))
endif


###################################################

# "make clean" target
clean: pre_clean pkg_clean
	@echo '<< cleaning all >>'
	@rm -f $(PACKAGE_BUILDDIR)/*
	@rm -f $(LARCV_LIBDIR)/$(SHLIB) 
	@rm -f $(LARCV_LIBDIR)/$(SHLIB) 
	@rm -f $(LARCV_LIBDIR)/_$(PACKAGE_NAME).so
	@rm -f $(LARCV_LIBDIR)/larcv/$(PACKAGE_NAME).py

pre_clean: 

###################################################
libclean:
	@echo '<< cleaning lib directory >>'
	@rm -f $(LARCV_LIBDIR)/$(SHLIB) 
	@rm -f lib/$(SHLIB) 

# ###################################################
# # auto-generate dependencies using g++ -M
# .depend: $(SOURCES) $(HEADERS)
# 	@rm -f .depend
# 	@echo '<< checking dependencies>>'
# 	@$(CXX) -M $(CXXFLAGS) $(LARCV_BASIC_ROOTINC) $(INCFLAGS) $(SOURCES) > .depend

# -include .depend

#ALWAYS:
